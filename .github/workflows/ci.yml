name: Continuous Integration

on:
  release:
    types:
      - published
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  lint:
    name: Lint
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        module: [ ., native ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version: 'stable'
          check-latest: 'true'
          cache-dependency-path: |
            ${{ matrix.module }}/go.sum

      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: "--color=always --config ${{ github.workspace }}/.golangci.yaml"
          working-directory: ${{ matrix.module }}

  test:
    name: Test .
    strategy:
      fail-fast: false
      matrix:
        go-version: [ '1.18', '1.22', '1.23', 'stable' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version: '${{ matrix.go-version }}'
          check-latest: 'true'
          cache-dependency-path: |
            go.sum

      - name: Test
        run: |
          go test --tags=mock -v -race -covermode atomic "-coverprofile=profile.cov.full" ./...

          # Remove some stuff from the profile...
          head -n1 profile.cov.full > profile.cov
          tail -n +2 profile.cov.full | grep -vE '^github\.com\/echocat\/slf4g\/(internal\/(test|demo)|hooks|sdk\/bridge\/hook)\/' >> profile.cov

      - name: Store test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tests-go-${{ matrix.go-version }}-${{ matrix.os }}-${{ github.run_number }}
          path: |
            profile.cov
          retention-days: 1
          if-no-files-found: warn

      - name: Send coverage
        uses: coverallsapp/github-action@v2
        with:
          parallel: true
          flag-name: go-${{ matrix.go-version }}-${{ matrix.os }}-slf4g
          format: golang
          file: profile.cov

  test-native:
    name: Test native
    strategy:
      fail-fast: false
      matrix:
        go-version: [ '1.23', 'stable' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version: '${{ matrix.go-version }}'
          check-latest: 'true'
          cache-dependency-path: |
            native/go.sum

      - name: Test
        run: |
          cd native

          go test --tags=mock -v -race -covermode atomic "-coverprofile=profile.cov.full" ./...

          # Remove some stuff from the profile...
          head -n1 profile.cov.full > profile.cov
          tail -n +2 profile.cov.full | grep -vE '^github\.com\/echocat\/slf4g\/native\/(internal\/demo_|color\/prepare_)\/' >> profile.cov

      - name: Store test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tests-native-go-${{ matrix.go-version }}-${{ matrix.os }}-${{ github.run_number }}
          path: |
            native/profile.cov
          retention-days: 1
          if-no-files-found: warn

      - name: Send coverage
        uses: coverallsapp/github-action@v2
        with:
          parallel: true
          flag-name: go-${{ matrix.go-version }}-${{ matrix.os }}-slf4g-native
          format: golang
          file: native/profile.cov

  finish:
    name: Finish
    needs:
      - test
      - test-native
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Send coverage finish
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
