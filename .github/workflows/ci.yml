on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

name: Continuous Integration
jobs:
  lint:
    name: Lint
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: 'true'

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: |
          go mod download

      - name: Install golangci-lint
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint --version

      - name: Lint
        run: |
          golangci-lint run --color=always -c .golangci.yml ./...

          cd native
          golangci-lint run --color=always -c ../.golangci.yml ./...

  test:
    name: Test
    strategy:
      matrix:
        go-version: [ '1.18', '1.22', '1.23', 'stable' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: 'true'

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest

      - name: Test
        run: |
          go test --tags=mock -v -race -covermode atomic "-coverprofile=profile.cov.tmp1" ./...

          # Remove some stuff from the profile...
          cat profile.cov.tmp1 | grep -v "echocat/slf4g/internal/test/" > profile.cov.tmp2
          cat profile.cov.tmp2 | grep -v "echocat/slf4g/internal/demo/" > profile.cov.tmp3
          cp profile.cov.tmp3 profile.cov

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          goveralls "-coverprofile=profile.cov" "-service=github" "-parallel" "-flagname=go-${{ matrix.go-version }}-${{ matrix.os }}-slf4g"

  test-native:
    name: Test native
    strategy:
      matrix:
        go-version: [ '1.23', 'stable' ]
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: 'true'

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest

      - name: Test
        run: |
          cd native

          go test --tags=mock -v -race -covermode atomic "-coverprofile=profile.cov.tmp1" ./...

          cat profile.cov.tmp1 | grep -v "echocat/slf4g/native/internal/demo_" > profile.cov.tmp2
          cat profile.cov.tmp2 | grep -v "echocat/slf4g/native/color/prepare_" > profile.cov.tmp3
          cp profile.cov.tmp3 profile.cov

      - name: Send coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd native
          goveralls "-coverprofile=profile.cov" "-service=github" "-parallel" "-flagname=go-${{ matrix.go-version }}-${{ matrix.os }}-slf4g-native"

  # notifies that all test jobs are finished.
  finish:
    needs:
      - test
      - test-native
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: 'true'

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest

      - name: Send coverage finish
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          goveralls "-parallel-finish" "-service=github"
